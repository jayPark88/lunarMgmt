plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
}
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

def mapstructSrcDir = 'build/generated/sources/annotationProcessor/java/main'
sourceSets {
    main.java.srcDirs += [mapstructSrcDir]
}

group = 'com.lunar'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.1'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.1'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.1'
    implementation 'com.auth0:java-jwt:3.1.0'

    // mysql
    runtimeOnly 'mysql:mysql-connector-java:8.0.25'

    // QueryDSL
    implementation ("com.querydsl:querydsl-jpa")
    implementation ("com.querydsl:querydsl-apt")
    implementation ("com.querydsl:querydsl-core")
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    // spring data
    implementation group: 'org.springframework.data', name: 'spring-data-commons', version: '2.7.2'


    // jackson
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.13.3'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
}

bootWar {
    archiveBaseName = "wiseai-admin"
    archiveVersion = "0.0.1-SNAPSHOT"
}

jar {
    enabled = false
}

bootJar {
    enabled = true
    archiveBaseName = "wiseai-admin"
    archiveVersion = "0.0.1-SNAPSHOT"
}

def querydslSrcDir = "src/main/generated"

sourceSets {
    main.java.srcDirs += [ querydslSrcDir ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslSrcDir)
}

description = 'wiseai-admin'

tasks.named('test') {
    useJUnitPlatform()
}
